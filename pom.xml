<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>bit-flip</groupId>
	<artifactId>bit-flip</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>
		<jcuda.jcudaVersion>12.6.0</jcuda.jcudaVersion>
		<!--<java.home>J${java.home}</java.home>-->
		<java.home>/usr/lib/jvm/java-21-openjdk-amd64</java.home>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.jcuda</groupId>
			<artifactId>jcuda</artifactId>
			<version>${jcuda.jcudaVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.jcuda</groupId>
			<artifactId>jcuda-natives</artifactId>
			<version>${jcuda.jcudaVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.jcuda</groupId>
			<artifactId>jcublas</artifactId>
			<version>${jcuda.jcudaVersion}</version>
		</dependency>
		<!--<dependency>
            <groupId>org.jcuda</groupId>
            <artifactId>jcufft</artifactId>
            <version>${jcuda.jcudaVersion}</version>
        </dependency>
        <dependency>
            <groupId>org.jcuda</groupId>
            <artifactId>jcurand</artifactId>
            <version>${jcuda.jcudaVersion}</version>
        </dependency>
        <dependency>
            <groupId>org.jcuda</groupId>
            <artifactId>jcusparse</artifactId>
            <version>${jcuda.jcudaVersion}</version>
        </dependency>
        <dependency>
            <groupId>org.jcuda</groupId>
            <artifactId>jcusolver</artifactId>
            <version>${jcuda.jcudaVersion}</version>
        </dependency>
        <dependency>
            <groupId>org.jcuda</groupId>
            <artifactId>jcudnn</artifactId>
            <version>${jcuda.jcudaVersion}</version>
        </dependency>-->
      <dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j2-impl</artifactId>
			<version>2.23.1</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcpkix-jdk18on</artifactId>
			<version>1.80</version>
		</dependency>
		<dependency>
			<groupId>org.conscrypt</groupId>
			<artifactId>conscrypt-openjdk-uber</artifactId>
			<version>2.5.2</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>5.10.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
					<source>21</source>
					<target>21</target>
				</configuration>
			</plugin>
			
		<plugin>
		  <groupId>org.codehaus.mojo</groupId>
		  <artifactId>exec-maven-plugin</artifactId>
		  <version>3.1.0</version>
		  <configuration>
		    <executable>/usr/local/cuda-12.9/bin/nvcc</executable> 
		    <arguments>
		    <!-- <argument>-I${env.JAVA_HOME}/include</argument>
          	  <argument>-I${env.JAVA_HOME}/include/linux</argument>-->
          	   <!-- Include XMP headers -->
          	  <argument>-I/home/altug/git/xmp/src/include</argument>
          	    <!-- Include JNI headers, must be min Java 21 -->
          	  <argument>-I${java.home}/include</argument>
			 <argument>-I${java.home}/include/linux</argument>
			  
			  <!-- Compiler flags -->
		      <argument>-Xcompiler</argument>
		      <argument>-fPIC</argument>
		      <argument>-shared</argument>
		       
		       <!-- Output -->
		      <argument>-o</argument>
		      <argument>${project.basedir}/lib/libbigint_mult_kernel.so</argument>
		      <argument>${project.basedir}/src/main/cuda/bigint_mult.cu</argument>
		      <!--<argument>${project.basedir}/lib/libxmp.so</argument>-->
		      <argument>${project.basedir}/src/main/cuda/xmp_jni_wrapper.cu</argument>
		      
		       <!-- Link XMP -->
	          <argument>-L${project.basedir}/lib</argument>
	          <argument>-lxmp</argument>
	          <!-- Embed runtime path for libxmp.so -->
	            <argument>-Xlinker</argument>
	            <argument>--rpath=${project.basedir}/lib</argument>
          
		    </arguments>
		  </configuration>
		  <executions>
		  <execution>
		      <id>print-details</id>
		      <phase>validate</phase>
		      <goals>
		        <goal>exec</goal>
		      </goals>
		      <configuration>
		        <executable>sh</executable>
		        <arguments>
		          <argument>-c</argument>
		          <!--<argument>echo JAVA_HOME=${env.JAVA_HOME}</argument>-->
		          <argument> echo "JAVA_HOME is set to:" ${java.home} "project.basedir:" ${project.basedir}</argument>
		        </arguments>
		      </configuration>
		    </execution>
		    
		    <execution>
		      <id>compile-cuda</id>
		      <phase>generate-sources</phase>
		      <goals>
		        <goal>exec</goal>
		      </goals>
		    </execution>
		  </executions>
		</plugin>
      <!-- Copy .so to target/classes -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>copy-lib</id>
            <phase>process-resources</phase>
            <goals><goal>copy-resources</goal></goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <resources>
                <resource>
                  <directory>lib</directory>
                  <includes>
                    <include>*.so</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      
		<!--	<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.3.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									Removing digital signatures
									<excludes>
										Removing digital signatures of Signature file (SF)
										<exclude>META-INF/*.SF</exclude>
										 The  actual digital signature of the
										.SF file ,using RSA or DSA
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>com.bitflip.BitFlipperApp</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>-->
		</plugins>
	</build>
</project>